package org.fenixedu.bennu.core.domain;

/*
 * @(#)bennu-core.dml
 *
 * Copyright 2009 Instituto Superior Tecnico
 * Founding Authors: Jo√£o Figueiredo, Luis Cruz, Paulo Abrantes, Susana Fernandes
 * 
 *      https://fenix-ashes.ist.utl.pt/
 * 
 *   This file is part of the Bennu web application infrastructure.
 *
 *   Bennu is free software: you can redistribute it and/or modify
 *   it under the terms of the GNU Lesser General Public License as published
 *   by the Free Software Foundation, either version 3 of the License, or
 *   (at your option) any later version.*
 *
 *   Bennu is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 *   GNU Lesser General Public License for more details.
 *
 *   You should have received a copy of the GNU Lesser General Public License
 *   along with Bennu. If not, see <http://www.gnu.org/licenses/>.
 * 
 */

valueType org.fenixedu.commons.i18n.LocalizedString as LocalizedString {
    externalizeWith {
        JsonElement json();
    }
    internalizeWith fromJson();
}

valueType java.lang.Class as Class {
	externalizeWith {
		String getName();
	}
	internalizeWith org.fenixedu.bennu.core.util.ClassInternalizer.internalize();
}

valueType java.util.Locale as Locale {
	externalizeWith {
		String toLanguageTag();
	}
	internalizeWith forLanguageTag();
}

valueType org.fenixedu.bennu.core.groups.GroupStrategy as GroupStrategyValueType {
    externalizeWith {
        String externalize();
    }
    internalizeWith strategyForType();
}

valueType org.fenixedu.bennu.core.domain.NashornStrategy as NashornStrategy {
    externalizeWith {
        Class getType();
        String getCode();
    }
}

public class Bennu {
	protected JsonElement propertyData;
}

relation DomainRootBennu {
	protected .pt.ist.fenixframework.DomainRoot playsRole root {
		multiplicity 1..1;
	}
	public Bennu playsRole bennu {
		multiplicity 0..1;
	}
}

public class User {
	protected String username  (REQUIRED);
	protected String password;
	protected String salt;
	protected DateTime created (REQUIRED);
}

public class UserLoginPeriod {
    protected LocalDate beginDate (REQUIRED);
    protected LocalDate endDate;
}

public class UserProfile {
    protected String displayName;
    protected String givenNames (REQUIRED);
    protected String familyNames;
    public String avatarUrl;
    public String email;
    public Locale preferredLocale;
    public Locale emailLocale;
}

class Avatar {
    protected bytearray data;
    protected String mimeType;
}

class NameIndex {
    protected String keyword;
}

relation SystemUsers {
	protected Bennu playsRole bennu {
		multiplicity 1..1;
	}
	protected User playsRole user {
		multiplicity *;
	}
}

relation UserLoginPeriods {
    protected User playsRole user {
        multiplicity 1..1;
    }
    public UserLoginPeriod playsRole loginValidity {
        multiplicity *;
    }
}

relation SystemProfiles {
    protected Bennu playsRole bennu {
        multiplicity 1..1;
    }
    protected UserProfile playsRole profile {
        multiplicity *;
    }
}

relation UserProfileUser {
    protected User playsRole user {
        multiplicity 0..1;
    }
    public UserProfile playsRole profile {
        multiplicity 1..1;
    }
}

relation UserProfileAvatar {
    protected UserProfile playsRole profile {
        multiplicity 0..1;
    }
    protected Avatar playsRole localAvatar {
        multiplicity 0..1;
    }
}

relation BennuNameIndexes {
    protected Bennu playsRole bennu {
        multiplicity 1..1;
    }
    protected NameIndex playsRole nameIndex {
        multiplicity *;
    }
}

relation UserProfileNameIndexes {
    public UserProfile playsRole profile {
        multiplicity *;
    }
    protected NameIndex playsRole nameIndex {
        multiplicity *;
    }
}

/* Authorization Groups */

public class groups.PersistentGroup {
}

relation PersistentGroups {
	protected Bennu playsRole root {
		multiplicity 0..1;
	}
	protected groups.PersistentGroup playsRole group {
		multiplicity *;
	}
}

public class groups.GroupConstant extends groups.PersistentGroup;

public class groups.PersistentGroupStrategy extends groups.GroupConstant {
    protected GroupStrategyValueType strategy;
}

public class groups.PersistentNobodyGroup extends groups.GroupConstant;

public class groups.PersistentAnyoneGroup extends groups.GroupConstant;

public class groups.PersistentAnonymousGroup extends groups.GroupConstant;

public class groups.PersistentLoggedGroup extends groups.GroupConstant;

relation GroupConstantRoot {
    protected groups.GroupConstant playsRole groupConstant {
        multiplicity *;
    }
    protected Bennu playsRole rootForGroupConstant {
        multiplicity 1..1;
    }
}

public class groups.PersistentUserGroup extends groups.PersistentGroup {
}

relation UserGroupMembers {
	protected groups.PersistentUserGroup playsRole userGroup {
		multiplicity *;
	}
	protected User playsRole member {
		multiplicity 1..*;
	}
}

public class groups.PersistentUnionGroup extends groups.PersistentGroup {
}

relation UnionGroupComposition {
    protected groups.PersistentGroup playsRole children {
        multiplicity 1..*;
    }
    protected groups.PersistentUnionGroup playsRole unions {
        multiplicity *;
    }
}

public class groups.PersistentIntersectionGroup extends groups.PersistentGroup {
}

relation IntersectionGroupComposition {
    protected groups.PersistentGroup playsRole children {
        multiplicity 1..*;
    }
    protected groups.PersistentIntersectionGroup playsRole intersections {
        multiplicity *;
    }
}

public class groups.PersistentDifferenceGroup extends groups.PersistentGroup {
}

relation DifferenceGroupFirst {
    protected groups.PersistentGroup playsRole first {
        multiplicity 1..1;
    }
    protected groups.PersistentDifferenceGroup playsRole differenceAtFirst {
        multiplicity *;
    }
}

relation DifferenceGroupRest {
    protected groups.PersistentGroup playsRole rest {
        multiplicity 1..*;
    }
    protected groups.PersistentDifferenceGroup playsRole differenceAtRest {
        multiplicity *;
    }
}

public class groups.PersistentNegationGroup extends groups.PersistentGroup {
}

relation GroupNegationGroup {
	protected groups.PersistentGroup playsRole negated {
		multiplicity 1..1;
	}
	protected groups.PersistentNegationGroup playsRole negation {
		multiplicity 0..1;
	}
}

public class groups.PersistentDynamicGroup extends groups.PersistentGroup {
	protected String name (REQUIRED);
	protected DateTime created (REQUIRED);
	public LocalizedString customPresentationName;
}

relation PersistentDynamicGroups {
    protected groups.PersistentDynamicGroup playsRole dynamic {
        multiplicity 0..*;
    }
    protected Bennu playsRole rootForDynamicGroup {
        multiplicity 0..1;
    }
}

relation PersistentDynamicGroupCreator {
    protected groups.PersistentDynamicGroup playsRole createdDynamicGroup {
		multiplicity *;
	}
	protected User playsRole creator {
		multiplicity 0..1;
	}
}

relation PersistentDynamicGroupWrapper {
	protected groups.PersistentDynamicGroup playsRole dynamicGroup {
		multiplicity *;
	}
	protected groups.PersistentGroup playsRole group {
		multiplicity 1..1;
	}
}

relation DynamicGroupHistoric {
	protected groups.PersistentDynamicGroup playsRole previous {
		multiplicity 0..1;
	}
	protected groups.PersistentDynamicGroup playsRole next {
		multiplicity 0..1;
	}
}