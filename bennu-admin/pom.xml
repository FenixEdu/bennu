<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.fenixedu</groupId>
        <artifactId>bennu</artifactId>
        <version>DEV-SNAPSHOT</version>
    </parent>

    <artifactId>bennu-admin</artifactId>
    <packaging>jar</packaging>
    <name>Bennu Admin</name>

    <properties>
        <version.org.apache.poi>3.17</version.org.apache.poi>
        <version.org.fenixedu.bennu>7.3.0</version.org.fenixedu.bennu>
        <version.org.fenixedu.bennu.vue.pluggable>1.0.0</version.org.fenixedu.bennu.vue.pluggable>
        <version.org.fenixedu.fenixedu-connect>2.3.4</version.org.fenixedu.fenixedu-connect>
        <version.org.fenixedu.fenixedu-queueing>3.2.0</version.org.fenixedu.fenixedu-queueing>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>${version.org.apache.poi}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>${version.org.apache.poi}</version>
        </dependency>
        <dependency>
            <groupId>org.fenixedu</groupId>
            <artifactId>bennu-core</artifactId>
            <version>${version.org.fenixedu.bennu}</version>
        </dependency>
        <dependency>
            <groupId>org.fenixedu</groupId>
            <artifactId>bennu-portal</artifactId>
            <version>${version.org.fenixedu.bennu}</version>
        </dependency>
        <dependency>
            <groupId>org.fenixedu</groupId>
            <artifactId>bennu-search</artifactId>
            <version>${version.org.fenixedu.bennu}</version>
        </dependency>
        <dependency>
            <groupId>org.fenixedu</groupId>
            <artifactId>bennu-spring</artifactId>
            <version>${version.org.fenixedu.bennu}</version>
        </dependency>
        <dependency>
            <groupId>org.fenixedu</groupId>
            <artifactId>bennu-vue-pluggable</artifactId>
            <version>${version.org.fenixedu.bennu.vue.pluggable}</version>
        </dependency>
        <dependency>
            <groupId>org.fenixedu</groupId>
            <artifactId>fenixedu-connect</artifactId>
            <version>${version.org.fenixedu.fenixedu-connect}</version>
        </dependency>
        <dependency>
            <groupId>org.fenixedu</groupId>
            <artifactId>fenixedu-queueing</artifactId>
            <version>${version.org.fenixedu.fenixedu-queueing}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.3.2</version>
                <configuration>
                    <skip>${exec.skip}</skip>
                </configuration>
                <executions>
                    <!-- The following will ensure `npm run clean:packages` is called
                         before anything else during the pre-clean phase -->
                    <execution>
                        <id>npm install (clean)</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>pre-clean</phase>
                        <configuration>
                            <workingDirectory>src/main/frontend</workingDirectory>
                            <executable>npm</executable>
                            <arguments>
                                <argument>run</argument>
                                <argument>clean:packages</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <!-- The following will ensure `npm install` is called
                         before anything else during the initialize phase -->
                    <execution>
                        <id>npm install (initialize)</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>initialize</phase>
                        <configuration>
                            <workingDirectory>src/main/frontend</workingDirectory>
                            <executable>npm</executable>
                            <arguments>
                                <argument>install</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <!-- Required: The following builds the frontend and packages it -->
                    <execution>
                        <id>npm run build (compile)</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <workingDirectory>src/main/frontend</workingDirectory>
                            <executable>npm</executable>
                            <arguments>
                                <argument>run</argument>
                                <argument>package:production</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <repositories>
        <repository>
            <id>fenixedu-maven-repository</id>
            <url>https://repo.fenixedu.org/fenixedu-maven-repository</url>
        </repository>
    </repositories>

    <distributionManagement>
        <repository>
            <id>dsi-maven-artifacts</id>
            <url>https://fenix-ashes.ist.utl.pt/nexus/repository/dsi-private-repo</url>
        </repository>
    </distributionManagement>
</project>
